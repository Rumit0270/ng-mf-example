name: Deploy applications

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout code
        with:
          fetch-depth: 0

      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'

      - name: Cache Node modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{hashFiles('package-lock.json')}}
          restore-keys: node_modules- # Take any latest cache if failed to find it for current package-lock.json'

      - run: npm ci
        name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Add .env file for React app
        run: |
          echo "${{ secrets.REACT_APP_ENV }}" > apps/mfe3/.env
          cat apps/mfe3/.env
        env:
          REACT_APP_ENV: ${{ secrets.REACT_APP_ENV }}

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            mfe1:
              - 'apps/mfe1/**'
              - 'libs/**'
              - 'package.json'

            mfe2:
              - 'apps/mfe2/**'
              - 'libs/**'
              - 'package.json'

            mfe3:
              - 'apps/mfe3/**'
              - 'package.json'

            shell:
              - 'apps/shell/**'
              - 'libs/**'
              - 'package.json'

      - uses: nrwl/nx-set-shas@v4
        name: Configure base and head SHAs required for the nx affected

      - run: npx nx affected -t lint test
        name: Run targets affected by PR

      # Build the applications
      - name: Build app for production
        run: npx nx run-many -t lint test build

      - name: Print the result of changes
        run: echo ${{ steps.changes.outputs }}
